# Generated by Django 5.2.6 on 2025-09-06 19:25

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('deleted', 'Deleted'), ('draft', 'Draft'), ('pending', 'Pending')], db_index=True, default='active', help_text='Status of the record', max_length=10)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('meta_title', models.CharField(blank=True, max_length=255)),
                ('meta_description', models.TextField(blank=True, max_length=160)),
                ('color', models.CharField(default='#007bff', help_text='Hex color code for category', max_length=7)),
                ('icon', models.CharField(blank=True, help_text='FontAwesome icon class', max_length=50)),
                ('image', models.URLField(blank=True, null=True)),
                ('sort_order', models.IntegerField(default=0)),
                ('posts_count', models.IntegerField(default=0)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='web.blogcategory')),
            ],
            options={
                'verbose_name_plural': 'Blog Categories',
                'db_table': 'blog_categories',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('deleted', 'Deleted'), ('draft', 'Draft'), ('pending', 'Pending')], db_index=True, default='active', help_text='Status of the record', max_length=10)),
                ('title', models.CharField(max_length=500)),
                ('slug', models.SlugField(blank=True, max_length=500, unique=True)),
                ('excerpt', models.TextField(blank=True, help_text='Short description for preview', max_length=300)),
                ('content', models.TextField()),
                ('post_type', models.CharField(choices=[('standard', 'Standard Post'), ('featured', 'Featured Post'), ('video', 'Video Post'), ('gallery', 'Gallery Post'), ('quote', 'Quote Post')], default='standard', max_length=20)),
                ('post_status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('scheduled', 'Scheduled'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('featured_image', models.URLField(blank=True, null=True)),
                ('featured_image_alt', models.CharField(blank=True, max_length=255)),
                ('gallery_images', models.JSONField(blank=True, default=list)),
                ('meta_title', models.CharField(blank=True, max_length=255)),
                ('meta_description', models.TextField(blank=True, max_length=160)),
                ('meta_keywords', models.CharField(blank=True, max_length=255)),
                ('og_title', models.CharField(blank=True, help_text='Open Graph title', max_length=255)),
                ('og_description', models.TextField(blank=True, help_text='Open Graph description', max_length=300)),
                ('og_image', models.URLField(blank=True, help_text='Open Graph image', null=True)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('shares_count', models.PositiveIntegerField(default=0)),
                ('comments_count', models.PositiveIntegerField(default=0)),
                ('allow_comments', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(db_index=True, default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='posts', to='web.blogcategory')),
            ],
            options={
                'db_table': 'blog_posts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BlogComment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('deleted', 'Deleted'), ('draft', 'Draft'), ('pending', 'Pending')], db_index=True, default='active', help_text='Status of the record', max_length=10)),
                ('guest_name', models.CharField(blank=True, max_length=100)),
                ('guest_email', models.EmailField(blank=True, max_length=254)),
                ('guest_phone_number', models.CharField(blank=True, max_length=15)),
                ('content', models.TextField(max_length=1000)),
                ('comment_status', models.CharField(choices=[('pending', 'Pending Approval'), ('approved', 'Approved'), ('spam', 'Spam'), ('trash', 'Trash')], default='pending', max_length=20)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('is_edited', models.BooleanField(default=False)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='web.blogcomment')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blog_comments', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='web.blogpost')),
            ],
            options={
                'db_table': 'blog_comments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BlogPostView',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('deleted', 'Deleted'), ('draft', 'Draft'), ('pending', 'Pending')], db_index=True, default='active', help_text='Status of the record', max_length=10)),
                ('session_key', models.CharField(blank=True, max_length=40, null=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('referrer', models.URLField(blank=True, null=True)),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('time_spent', models.IntegerField(default=0, help_text='Time spent reading in seconds')),
                ('scroll_percentage', models.IntegerField(default=0, help_text='Percentage of page scrolled')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_views', to='web.blogpost')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'blog_post_views',
            },
        ),
        migrations.CreateModel(
            name='BlogTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('deleted', 'Deleted'), ('draft', 'Draft'), ('pending', 'Pending')], db_index=True, default='active', help_text='Status of the record', max_length=10)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('color', models.CharField(default='#6c757d', help_text='Hex color code for tag', max_length=7)),
                ('posts_count', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'blog_tags',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['slug'], name='blog_tags_slug_720acc_idx'), models.Index(fields=['posts_count'], name='blog_tags_posts_c_e02089_idx')],
            },
        ),
        migrations.AddField(
            model_name='blogpost',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='posts', to='web.blogtag'),
        ),
        migrations.AddIndex(
            model_name='blogcategory',
            index=models.Index(fields=['slug'], name='blog_catego_slug_ca79bd_idx'),
        ),
        migrations.AddIndex(
            model_name='blogcategory',
            index=models.Index(fields=['parent'], name='blog_catego_parent__709cd6_idx'),
        ),
        migrations.AddIndex(
            model_name='blogcategory',
            index=models.Index(fields=['sort_order'], name='blog_catego_sort_or_ce8a07_idx'),
        ),
        migrations.AddIndex(
            model_name='blogcomment',
            index=models.Index(fields=['post', 'comment_status'], name='blog_commen_post_id_3b968e_idx'),
        ),
        migrations.AddIndex(
            model_name='blogcomment',
            index=models.Index(fields=['user', 'comment_status'], name='blog_commen_user_id_04078c_idx'),
        ),
        migrations.AddIndex(
            model_name='blogcomment',
            index=models.Index(fields=['parent'], name='blog_commen_parent__5926f9_idx'),
        ),
        migrations.AddIndex(
            model_name='blogcomment',
            index=models.Index(fields=['comment_status', 'created_at'], name='blog_commen_comment_0e7460_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpostview',
            index=models.Index(fields=['post', 'viewed_at'], name='blog_post_v_post_id_96f839_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpostview',
            index=models.Index(fields=['user', 'viewed_at'], name='blog_post_v_user_id_114527_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpostview',
            index=models.Index(fields=['ip_address', 'viewed_at'], name='blog_post_v_ip_addr_b46641_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['slug'], name='blog_posts_slug_b4ca25_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['author', 'post_status'], name='blog_posts_author__c0a6ad_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['category', 'post_status'], name='blog_posts_categor_66193b_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['is_featured', 'post_status'], name='blog_posts_is_feat_8af6b6_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['post_status'], name='blog_posts_post_st_d875d3_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['views_count'], name='blog_posts_views_c_9d6af6_idx'),
        ),
    ]
